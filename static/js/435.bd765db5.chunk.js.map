{"version":3,"file":"static/js/435.bd765db5.chunk.js","mappings":"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","sources":["api/Api.js","components/FilmCardDetail/FilmCardDetail.styled.js","components/FilmCardDetail/FilmCardDetail.jsx","components/AdditionalInfo/AdditionalInfo.styled.js","components/AdditionalInfo/AdditionalInfo.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '579a7483bae7d6a5a25eb4c1ddded2cf';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getFilmById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    const movieInfo = response.data;\n    return movieInfo;\n  } catch (error) {\n    console.log('Error in getFilmById', error);\n  }\n};\n\nexport const getFilmByKeyword = async movie => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${movie}`\n    );\n    const searchMovie = response.data.results;\n    return searchMovie;\n  } catch (error) {\n    console.log('Error in getFilmByKeyword', error);\n  }\n};\n\nexport const getFilmCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const cast = response.data.cast;\n    return cast;\n  } catch (error) {\n    console.log('Error in getFilmCast', error);\n  }\n};\n\nexport const getFilmReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    console.log('Error in getFilmReviews', error);\n  }\n};\n\nexport function getDate(date) {\n  if (date) {\n    const year = date.split('-')[0];\n    return year;\n  }\n}\n\nexport function getPosterFilm(posterPath) {\n  if (posterPath) return `${BASE_IMG_URL}/${posterPath}`;\n  return 'https://www.jsconsulting.kz/assets/img/noImg.jpg';\n}\n\nexport function getGenres(genres) {\n  if (!genres) {\n    return;\n  }\n  const genresName = genres.map(genre => genre.name);\n  return genresName.join(', ');\n}\n\nexport function sliceVoteAverage(voteAverage) {\n  const sliceVoteAverage = parseFloat(voteAverage.toFixed(1));\n  return sliceVoteAverage;\n}\n\nexport function getPecentageValue(voteAverage) {\n  if (!voteAverage) {\n    return;\n  }\n  const sliceVote = sliceVoteAverage(voteAverage);\n  const percentValue = (sliceVote / 10) * 100;\n  const percent = parseFloat(percentValue.toFixed(1));\n  return `${percent}%`;\n}\n","import styled from 'styled-components';\n\nexport const FilmCard = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-bottom: 20px;\n  padding: 10px;\n`;\n\nexport const FilmInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  max-width: 450px;\n  padding: 10px;\n`;\n\nexport const FilmTitle = styled.h1`\n  font-size: 32px;\n  font-weight: 700;\n  line-height: 1.2;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n  font-family: 'Montserrat', sans-serif;\n  letter-spacing: -0.2px;\n  text-shadow: -2px -2px 5px #fff, 2px 2px 5px #babecc;\n`;\n\nexport const FilmPoster = styled.img`\n  object-fit: cover;\n  width: 320px;\n  height: 480px;\n  border-radius: 10px;\n  border-top-right-radius: 50px;\n  background: linear-gradient(145deg, #f0f0f0, #cacaca);\n  box-shadow: 20px 20px 60px #bebebe, -20px -20px 60px #ffffff;\n`;\n\nexport const FilmInfoTitle = styled.p`\n  font-size: 15px;\n  font-weight: 700;\n  margin-bottom: 10px;\n  font-family: 'Montserrat', sans-serif;\n  text-shadow: -2px -2px 5px #fff, 2px 2px 5px #babecc;\n`;\n\nexport const FilmInfoDesc = styled.span`\n  font-size: 15px;\n  font-weight: 400;\n  font-family: 'Montserrat', sans-serif;\n  text-shadow: -2px -2px 5px #fff, 2px 2px 5px #babecc;\n`;\n\nexport const FilmInfoOverview = styled.p`\n  font-size: 15px;\n  margin-bottom: 10px;\n  font-weight: 400;\n  text-align: justify;\n`;\n","import { getPosterFilm, getGenres, getDate, getPecentageValue } from 'api/Api';\n\nimport {\n  FilmCard,\n  FilmInfoWrapper,\n  FilmPoster,\n  FilmTitle,\n  FilmInfoTitle,\n  FilmInfoDesc,\n  FilmInfoOverview,\n} from './FilmCardDetail.styled';\n\nimport PropTypes from 'prop-types';\n\nexport const FilmCardDetail = ({ movie }) => {\n  const { title, poster_path, release_date, overview, genres, vote_average } =\n    movie;\n  return (\n    <FilmCard>\n      <FilmPoster src={getPosterFilm(poster_path)} alt={title} />\n      <FilmInfoWrapper>\n        <FilmTitle>\n          {title} ({getDate(release_date)})\n        </FilmTitle>\n        <FilmInfoTitle>\n          User Score:{' '}\n          <FilmInfoDesc>\n            {vote_average && getPecentageValue(vote_average)}\n          </FilmInfoDesc>\n        </FilmInfoTitle>\n        <FilmInfoTitle>Overview: </FilmInfoTitle>\n        <FilmInfoOverview>{overview}</FilmInfoOverview>\n        <FilmInfoTitle>\n          Genres: <FilmInfoDesc>{getGenres(genres)}</FilmInfoDesc>\n        </FilmInfoTitle>\n      </FilmInfoWrapper>\n    </FilmCard>\n  );\n};\n\nFilmCardDetail.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n    vote_average: PropTypes.number,\n  }),\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const AdditionalInfoWrapper = styled.div`\n  margin: 20px auto;\n  margin-top: 0;\n  text-align: center;\n`;\n\nexport const AdditionalInfoTitle = styled.h2`\n  font-family: 'Montserrat', sans-serif;\n  letter-spacing: -0.2px;\n  text-shadow: -2px -2px 5px #fff, 2px 2px 5px #babecc;\n  margin-bottom: 10px;\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const AdditionalItem = styled(NavLink)`\n  padding: 8px 25px;\n  border-radius: 320px;\n  text-decoration: none;\n  text-shadow: 1px 1px 0 #fff;\n  color: #61677c;\n  font-weight: 500;\n  display: block;\n  min-width: 150px;\n  background-color: #ebecf0;\n  transition: all 0.2s ease-in-out;\n  box-shadow: -5px -5px 20px #fff, 5px 5px 20px #babecc;\n\n  &:hover {\n    box-shadow: -2px -2px 5px #fff, 2px 2px 5px #babecc;\n  }\n  &.active {\n    box-shadow: inset 1px 1px 2px #babecc, inset -1px -1px 2px #fff;\n  }\n`;\n","import {\n  AdditionalInfoWrapper,\n  AdditionalInfoList,\n  AdditionalInfoTitle,\n  AdditionalItem,\n} from './AdditionalInfo.styled';\n\nimport PropTypes from 'prop-types';\n\n\nexport const AdditionalInfo = ({ backLinkHref }) => {\n  return (\n    <AdditionalInfoWrapper>\n      <AdditionalInfoTitle>Additional infomation</AdditionalInfoTitle>\n      <AdditionalInfoList>\n        <li>\n          <AdditionalItem to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </AdditionalItem>\n        </li>\n        <li>\n          <AdditionalItem to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </AdditionalItem>\n        </li>\n      </AdditionalInfoList>\n    </AdditionalInfoWrapper>\n  );\n};\n\nAdditionalInfo.propTypes = {\n    backLinkHref: PropTypes.shape({\n        state: PropTypes.shape({}),\n    }),\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  padding: 0 0 60px 0;\n`;\n\nexport const LinkStyled = styled(Link)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 10px;\n  margin-bottom: 20px;\n  max-width: 110px;\n  font-weight: bold;\n  border-radius: 320px;\n  text-decoration: none;\n  text-shadow: 1px 1px 0 #fff;\n  color: #61677c;\n  background-color: #ebecf0;\n  transition: all 0.2s ease-in-out;\n  box-shadow: -5px -5px 20px #fff, 5px 5px 20px #babecc;\n  &:hover {\n    box-shadow: -2px -2px 5px #fff, 2px 2px 5px #babecc;\n  }\n  &:active {\n    box-shadow: inset 1px 1px 2px #babecc, inset -1px -1px 2px #fff;\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { MdArrowBackIosNew } from 'react-icons/md';\nimport { Loader } from 'components/Loader/Loader';\nimport { FilmCardDetail } from 'components/FilmCardDetail/FilmCardDetail';\nimport { AdditionalInfo } from 'components/AdditionalInfo/AdditionalInfo';\nimport { getFilmById } from 'api/Api';\nimport { Outlet } from 'react-router-dom';\nimport { LinkStyled, Section } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovieInfo = async () => {\n      try {\n        const movieInfo = await getFilmById(movieId);\n        setMovie(movieInfo);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        console.log('Error in MovieDetails', error);\n      }\n    };\n    getMovieInfo();\n  }, [movieId]);\n\n  if (movie.lenght === 0) {\n    return;\n  }\n\n  return (\n    <main>\n      {!isLoading && (\n        <Section>\n          <LinkStyled to={backLinkHref}>\n            <MdArrowBackIosNew size={24} />\n            Go back\n          </LinkStyled>\n          <FilmCardDetail movie={movie} />\n          <AdditionalInfo backLinkHref={backLinkHref} />\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </Section>\n      )}\n      {isLoading && <Loader />}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","axios","getFilmById","movieId","response","movieInfo","data","console","log","getFilmByKeyword","movie","searchMovie","results","getFilmCast","cast","getFilmReviews","reviews","getDate","date","split","getPosterFilm","posterPath","getGenres","genres","map","genre","name","join","sliceVoteAverage","voteAverage","parseFloat","toFixed","getPecentageValue","sliceVote","percent","FilmCard","styled","FilmInfoWrapper","FilmTitle","FilmPoster","FilmInfoTitle","FilmInfoDesc","FilmInfoOverview","FilmCardDetail","title","poster_path","release_date","overview","vote_average","src","alt","AdditionalInfoWrapper","AdditionalInfoTitle","AdditionalInfoList","AdditionalItem","NavLink","AdditionalInfo","backLinkHref","to","state","from","Section","LinkStyled","Link","useParams","useState","setMovie","isLoading","setIsLoading","useLocation","useEffect","getMovieInfo","lenght","size","Suspense","fallback","Loader"],"sourceRoot":""}